[gd_scene load_steps=4 format=2]

[ext_resource path="res://assets/scan.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]

script/source = "extends Node2D
var test = false
var firer
# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	$AnimationPlayer.set_assigned_animation(\"scan\")
	$AnimationPlayer.set_autoplay(\"scan\") 
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass

func setup(fired):
	firer = fired
	
func _on_AudioStreamPlayer_finished():
	queue_free()
	pass # Replace with function body.


func _on_AnimationPlayer_animation_finished(anim_name):
	decide()
	queue_free()
	pass # Replace with function body.

func decide():
	pass"

[sub_resource type="Animation" id=2]

length = 2.5
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0.00244132, 0.00244132 ), Vector2( 0.3, 0.3 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 2.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 1, 0.764706, 0.556863 ), Color( 0, 1, 0.764706, 0 ) ]
}

[node name="ping" type="Node2D"]
position = Vector2( -0.0336552, 0 )
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
modulate = Color( 0, 1, 0.764706, 0 )
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "scan"
anims/scan = SubResource( 2 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
